AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Fargate task in a private subnet with a load balancer and auto scaling

Parameters:
  Stage:
    Description: An harper:environment name that is prefixed to resource names
    Type: String

  PORT:
    Type: String
    Default: 6533

  InitalVolumeSize:
    Description: Initial database volume size
    Type: String
    Default: 10
    AllowedValues:
      - 10
  MaxVolumeSize:
    Description: Database maximum volume size
    Type: String
    Default: 40
    AllowedValues:
      - 20
      - 30
      - 40
      - 50
      - 60
      - 70
      - 80
      - 90
      - 100

  OfficeIP:
    Type: String
    # Default: '185.214.181.161/32' # Replace with Astronomer.io's IP
    Default: '185.214.181.61/32' # Replace with Astronomer.io's IP
  # https://cloud.astronomer.io/clr9qwhbn033u01qzg6shab5j/deployments/clt4wht0a00nz01lkog7kna4t/details
  AstronomerIoIP1:
    Type: String
    Default: '3.78.70.36/32' # Replace with Astronomer.io's IP
  AstronomerIoIP2:
    Type: String
    Default: '3.120.79.78/32' # Replace with Astronomer.io's IP
  # https://help.tableau.com/current/pro/desktop/en-us/publish_tableau_online_ip_authorization.htm
  TableauIP1:
    Type: String
    Default: '34.246.74.86/32' # Replace with Tableau's IP
  TableauIP2:
    Type: String
    Default: '52.215.158.213/32' # Replace with Tableau's IP
  DatalakeAdminUser:
    Description: The database admin user
    Type: String
  DatalakeAdminPass:
    Description: The database admin password
    Type: String
    NoEcho: true
    MinLength: 8
    ConstraintDescription: The password must be at least 8 characters long.
  BastionSecurityGroupId:
    Description: The BastionSecuriityGroupId For the Bastion Host
    Type: String

Resources:

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupName: !Sub "${Stage}-datalake-subnetgroup"
      DBSubnetGroupDescription: !Sub "Subnet Group for the RDS ${Stage} Datalake"
      SubnetIds:
        - Fn::ImportValue:
            !Sub "${Stage}-public-subnet-1"
        - Fn::ImportValue:
            !Sub "${Stage}-public-subnet-2"
        - Fn::ImportValue:
            !Sub "${Stage}-public-subnet-3"

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access from specific IPs to RDS PostgreSQL
      VpcId:
        Fn::ImportValue:
            !Sub "${Stage}-vpc-id"
      Tags:
          - Key: Name
            Value: !Sub "${Stage}-datalake-postgres"
          - Key: harper:env
            Value: !Ref Stage
          - Key: harper:stack
            Value: harper-datalake-stack
          - Key: harper:version
            Value: '2'

  BastionSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Bastion Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      SourceSecurityGroupId: !Ref BastionSecurityGroupId

  OfficeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Office Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      CidrIp: !Ref OfficeIP
      # CidrIp: 0.0.0.0/0

  AstronomerSecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Astronomer Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      CidrIp: !Ref AstronomerIoIP1

  AstronomerSecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Astronomer Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      CidrIp: !Ref AstronomerIoIP2

  TableauSecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Tableau Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      CidrIp: !Ref TableauIP1

  TableauSecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      Description: "DBSecurityGroup for Tableau Access"
      IpProtocol: tcp
      FromPort: !Ref PORT
      ToPort: !Ref PORT
      CidrIp: !Ref TableauIP2

  PostgreSQLInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t4g.medium
      StorageType: 'gp2'
      AllocatedStorage: !Ref InitalVolumeSize
      MaxAllocatedStorage: !Ref MaxVolumeSize
      Engine: postgres
      EngineVersion: '12'
      MasterUsername: !Ref DatalakeAdminUser
      MasterUserPassword: !Ref DatalakeAdminPass
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      MultiAZ: false
      Port: !Ref PORT
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      Tags:
          - Key: Name
            Value: !Sub "${Stage}-datalake-postgres"
          - Key: harper:env
            Value: !Ref Stage
          - Key: harper:stack
            Value: harper-datalake-stack
          - Key: harper:version
            Value: '2'

Outputs:
  DatalakeEndpoint:
    Description: The datalake endpoint
    Value: !GetAtt PostgreSQLInstance.Endpoint.Address
    Export:
      Name: !Sub "${Stage}-DatalakeEndpoint"
  DatalakePort:
    Description: The database port number
    Value: !Ref PORT
    Export:
      Name: !Sub "${Stage}-DatalakePort"
